=begin
#Insights Service Approval APIs

#APIs to query approval service

The version of the OpenAPI document: 1.2.0
Contact: support@redhat.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.2.2

=end

# Common files
require 'approval-api-client/api_client'
require 'approval-api-client/api_error'
require 'approval-api-client/version'
require 'approval-api-client/configuration'

# Models
require 'approval-api-client/models/action'
require 'approval-api-client/models/action_collection'
require 'approval-api-client/models/collection_links'
require 'approval-api-client/models/collection_metadata'
require 'approval-api-client/models/graphql_in'
require 'approval-api-client/models/graphql_out'
require 'approval-api-client/models/group_ref'
require 'approval-api-client/models/http_api_error'
require 'approval-api-client/models/http_api_error_collection'
require 'approval-api-client/models/request'
require 'approval-api-client/models/request_collection'
require 'approval-api-client/models/request_in'
require 'approval-api-client/models/resource_object'
require 'approval-api-client/models/tag'
require 'approval-api-client/models/tag_resource'
require 'approval-api-client/models/template'
require 'approval-api-client/models/template_collection'
require 'approval-api-client/models/workflow'
require 'approval-api-client/models/workflow_collection'

# APIs
require 'approval-api-client/api/action_api'
require 'approval-api-client/api/graphql_api'
require 'approval-api-client/api/request_api'
require 'approval-api-client/api/template_api'
require 'approval-api-client/api/workflow_api'

module ApprovalApiClient
  class << self
    # Customize default settings for the SDK using block.
    #   ApprovalApiClient.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
